generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  email       String   @unique
  name        String
  password    String
  gender      Gender
  profilePic  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  sentMessages   Message[]        @relation("SentMessages")
  receivedMessages Message[]      @relation("ReceivedMessages")
  participatedConversations ConversationParticipant[] @relation("UserConversations")
}

model Message {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  senderId   String   @db.ObjectId
  receiverId String   @db.ObjectId
  message    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  conversation Conversation? @relation("ConversationMessages", fields: [conversationId], references: [id])
  conversationId String? @db.ObjectId
}

model Conversation {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  messages     Message[] @relation("ConversationMessages")
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  participants ConversationParticipant[] @relation("ConversationParticipants")
}

model ConversationParticipant {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @db.ObjectId
  conversationId String  @db.ObjectId
  user         User     @relation("UserConversations", fields: [userId], references: [id])
  conversation Conversation @relation("ConversationParticipants", fields: [conversationId], references: [id])
}

enum Gender {
  Male
  Female
}